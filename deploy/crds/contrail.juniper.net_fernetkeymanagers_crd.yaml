apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: fernetkeymanagers.contrail.juniper.net
spec:
  group: contrail.juniper.net
  names:
    kind: FernetKeyManager
    listKind: FernetKeyManagerList
    plural: fernetkeymanagers
    singular: fernetkeymanager
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FernetKeyManager is the Schema for the fernetkeymanagers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FernetKeyManagerSpec defines the desired state of FernetKeyManager
            properties:
              rotationFrequency:
                type: integer
              tokenAllowExpiredWindow:
                type: integer
              tokenExpiration:
                type: integer
            required:
            - rotationFrequency
            - tokenAllowExpiredWindow
            - tokenExpiration
            type: object
          status:
            description: FernetKeyManagerStatus defines the observed state of FernetKeyManager
            properties:
              secretName:
                type: string
            required:
            - secretName
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
